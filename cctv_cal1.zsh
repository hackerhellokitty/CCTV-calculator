#!/usr/bin/env zsh
# CCTV Recording Days Calculator (Mode 1) ‚Äî HDD = TB (‡∏ê‡∏≤‡∏ô 10)
# Default ‡∏ï‡πà‡∏≠‡∏Å‡∏•‡πâ‡∏≠‡∏á: Codec=H.265+, Resolution=2MP, Bitrate=2048 kbps
# ‡∏Å‡∏î Enter ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ default ‡πÑ‡∏î‡πâ‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ‡πÅ‡∏•‡∏∞‡∏°‡∏µ‡πÇ‡∏´‡∏°‡∏î‡πÉ‡∏ä‡πâ default ‡∏Å‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏Å‡∏•‡πâ‡∏≠‡∏á
clear
set -euo pipefail

print_hr()   { print -r -- "------------------------------------------------------------"; }
say()        { print -r -- "$@"; }
say_err()    { print -r -- "$@" >&2; }

# HDD TB (‡∏ê‡∏≤‡∏ô 10) ‚Üí bytes
hdd_bytes_from_input() {
  local capacity="$1"
  echo $(( capacity * 1000000000000.0 ))   # 1 TB = 10^12 bytes
}

# kbps ‚Üí bytes/sec
kbps_to_Bps() {
  local kbps="$1"
  echo $(( kbps * 1000.0 / 8.0 ))
}

# ‡∏ï‡∏±‡∏î‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏±‡∏ß‡∏ó‡πâ‡∏≤‡∏¢
trim() {
  local s="$1"
  s="${s##[[:space:]]}"
  s="${s%%[[:space:]]}"
  print -r -- "$s"
}

# ‡∏≠‡πà‡∏≤‡∏ô‡∏Ñ‡πà‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏° default (Enter = ‡∏£‡∏±‡∏ö default)
read_with_default() {
  local prompt="$1" default="$2" var
  vared -p "$prompt [$default]: " -c var
  var="$(trim "$var")"
  [[ -z "$var" ]] && var="$default"
  echo "$var"
}

# ‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏•‡∏∑‡∏≠‡∏Å: ‡∏£‡∏±‡∏ö‡πÑ‡∏î‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏´‡∏£‡∏∑‡∏≠‡∏ä‡∏∑‡πà‡∏≠ (‡πÑ‡∏°‡πà‡∏™‡∏ô‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå)
# ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö default: ‡∏Å‡∏î Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏Ñ‡πà‡∏≤ default_value
choose_from_list_or_name_default() {
  local prompt="$1" default_value="$2"; shift 2
  local options=("$@")
  local lower_opts=()
  local i

  say_err "[‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á: ‡∏à‡∏∞‡∏û‡∏¥‡∏°‡∏û‡πå‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç/‡∏ä‡∏∑‡πà‡∏≠ ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏î Enter ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô]"
  say_err "$prompt (‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô: $default_value)"
  i=1
  for o in "${options[@]}"; do
    say_err "  $i) $o"
    lower_opts+=("${o:l}")
    (( i++ ))
  done

  local choice
  while true; do
    vared -p "‡∏û‡∏¥‡∏°‡∏û‡πå‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç (1-${#options[@]}) / ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠ / Enter ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô: " -c choice
    choice="$(trim "$choice")"
    local choice_l="${choice:l}"

    # ‡∏Å‡∏î Enter = default
    if [[ -z "$choice" ]]; then
      echo "$default_value"
      return
    fi
    # ‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡πÉ‡∏ô‡∏ä‡πà‡∏ß‡∏á
    if [[ "$choice" =~ '^[0-9]+$' ]] && (( choice >= 1 && choice <= ${#options[@]} )); then
      echo "${options[$choice]}"
      return
    fi
    # ‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡∏∑‡πà‡∏≠‡∏ó‡∏µ‡πà‡∏ï‡∏£‡∏á
    for idx in {1..${#options[@]}}; do
      if [[ "${lower_opts[$idx]}" == "$choice_l" ]]; then
        echo "${options[$idx]}"
        return
      fi
    done

    say_err "‚ùå ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á: ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç 1-${#options[@]}, ‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏á, ‡∏´‡∏£‡∏∑‡∏≠‡∏Å‡∏î Enter ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô"
  done
}

yes_no_default_yes() {
  local prompt="$1" ans
  vared -p "$prompt [Y/n]: " -c ans
  ans="$(trim "${ans:l}")"
  [[ -z "$ans" || "$ans" == "y" || "$ans" == "yes" ]] && return 0 || return 1
}

main() {
  print_hr
  say "üìπ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏£‡∏∞‡∏¢‡∏∞‡πÄ‡∏ß‡∏•‡∏≤‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å (‡πÇ‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà 1) ‚Äî HDD ‡∏´‡∏ô‡πà‡∏ß‡∏¢ TB (‡∏ê‡∏≤‡∏ô 10)"
  print_hr

  # ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏∏ HDD
  local hdd_capacity
  while true; do
    vared -p "‡πÉ‡∏™‡πà‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏∏ HDD (TB): " -c hdd_capacity
    hdd_capacity="$(trim "$hdd_capacity")"
    if [[ "$hdd_capacity" =~ '^[0-9]*([.][0-9]+)?$' ]] && [[ -n "$hdd_capacity" ]]; then
      break
    fi
    say_err "‚ùå ‡πÉ‡∏™‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô ‡πÄ‡∏ä‡πà‡∏ô 1, 2, 4, 6.5"
  done

  # ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏•‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á
  local cam_count
  while true; do
    vared -p "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á: " -c cam_count
    cam_count="$(trim "$cam_count")"
    if [[ "$cam_count" =~ '^[0-9]+$' ]] && (( cam_count >= 1 )); then
      break
    fi
    say_err "‚ùå ‡πÉ‡∏™‡πà‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÄ‡∏ï‡πá‡∏°‡∏ï‡∏±‡πâ‡∏á‡πÅ‡∏ï‡πà 1 ‡∏Ç‡∏∂‡πâ‡∏ô‡πÑ‡∏õ"
  done

  # ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å/‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏≥‡∏´‡∏ô‡∏î
  local codecs=("H.264" "H.264+" "H.265" "H.265+")
  local resolutions=("1MP" "2MP" "3MP" "4MP" "8MP")
  local default_codec="H.265+"
  local default_res="2MP"
  local default_kbps="2048"

  # ‡πÇ‡∏´‡∏°‡∏î‡∏•‡∏±‡∏î: ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤ default ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡∏Å‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏Å‡∏•‡πâ‡∏≠‡∏á
  local use_defaults_for_all="no"
  if yes_no_default_yes "‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏∏‡∏Å‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà? (Codec=$default_codec, Res=$default_res, Bitrate=${default_kbps}kbps)"; then
    use_defaults_for_all="yes"
  fi

  typeset -a ch_codec ch_res ch_kbps

  if [[ "$use_defaults_for_all" == "yes" ]]; then
    # ‡∏£‡∏±‡∏ö‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß (‡πÄ‡∏ú‡∏∑‡πà‡∏≠‡∏≠‡∏¢‡∏≤‡∏Å‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô default ‡∏£‡∏≠‡∏ö‡∏ô‡∏µ‡πâ)
    print_hr
    say "‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏£‡∏≠‡∏ö‡∏ô‡∏µ‡πâ (‡∏Å‡∏î Enter ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÑ‡∏ß‡πâ)"
    default_codec=$(choose_from_list_or_name_default "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Encoding mode" "$default_codec" "${codecs[@]}")
    default_res=$(choose_from_list_or_name_default "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Resolution" "$default_res" "${resolutions[@]}")
    default_kbps=$(read_with_default "‡∏Å‡∏£‡∏≠‡∏Å Bitrate (kbps)" "$default_kbps")

    for (( ch=1; ch<=cam_count; ch++ )); do
      ch_codec[$ch]="$default_codec"
      ch_res[$ch]="$default_res"
      ch_kbps[$ch]="$default_kbps"
    done
  else
    # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡∏•‡∏∞‡∏Å‡∏•‡πâ‡∏≠‡∏á (Enter = ‡∏£‡∏±‡∏ö‡∏Ñ‡πà‡∏≤ default ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡πà‡∏≠‡∏á)
    for (( ch=1; ch<=cam_count; ch++ )); do
      print_hr
      say "‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏•‡πâ‡∏≠‡∏á Ch $ch"
      ch_codec[$ch]=$(choose_from_list_or_name_default "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Encoding mode" "$default_codec" "${codecs[@]}")
      ch_res[$ch]=$(choose_from_list_or_name_default "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å Resolution" "$default_res" "${resolutions[@]}")
      local kbps
      while true; do
        kbps=$(read_with_default "‡∏Å‡∏£‡∏≠‡∏Å Bitrate (kbps)" "$default_kbps")
        if [[ "$kbps" =~ '^[0-9]*([.][0-9]+)?$' ]] && (( $(printf '%.0f' "$kbps") > 0 )); then
          ch_kbps[$ch]="$kbps"
          break
        fi
        say_err "‚ùå ‡πÉ‡∏™‡πà‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤ 0 ‡πÄ‡∏ä‡πà‡∏ô 512, 1024, 2048, 4096, 8192"
      done
    done
  fi

  print_hr
  say "üì¶ ‡∏™‡∏£‡∏∏‡∏õ‡∏≠‡∏¥‡∏ô‡∏û‡∏∏‡∏ï"
  say "HDD: $hdd_capacity TB (‡∏ê‡∏≤‡∏ô 10)"
  say "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡∏•‡πâ‡∏≠‡∏á: $cam_count"

  # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì
  local hdd_bytes total_kbps=0.0
  hdd_bytes=$(hdd_bytes_from_input "$hdd_capacity")
  for (( ch=1; ch<=cam_count; ch++ )); do
    total_kbps=$(( total_kbps + ch_kbps[$ch] ))
  done

  local total_Bps seconds_per_day=86400.0
  total_Bps=$(kbps_to_Bps "$total_kbps")
  if (( $(printf '%.0f' "$total_Bps") == 0 )); then
    say "‚ùå Bitrate ‡∏£‡∏ß‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏®‡∏π‡∏ô‡∏¢‡πå ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ"
    exit 1
  fi

  local days_all=$(( hdd_bytes / (total_Bps * seconds_per_day) ))
  local hours_all=$(( days_all * 24.0 ))

  # ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ú‡∏•‡∏ï‡πà‡∏≠‡∏ä‡πà‡∏≠‡∏á ‡πÅ‡∏•‡∏∞‡∏™‡∏£‡∏∏‡∏õ‡∏£‡∏ß‡∏°
  print_hr
  say "üßæ ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏ï‡πà‡∏≠‡∏ä‡πà‡∏≠‡∏á"
  for (( ch=1; ch<=cam_count; ch++ )); do
    local Bps_i=$(kbps_to_Bps "${ch_kbps[$ch]}")
    local days_if_only_this=$(( hdd_bytes / (Bps_i * seconds_per_day) ))

    say "Ch $ch"
    say "  Encoding mode : ${ch_codec[$ch]}"
    say "  Resolution    : ${ch_res[$ch]}"
    say "  Bitrate       : ${ch_kbps[$ch]} kbps"
    say "  ‚û§ ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏ó‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏ö‡∏ö‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô‡∏ó‡∏∏‡∏Å‡∏ä‡πà‡∏≠‡∏á: ~$(printf '%.2f' "$days_all") ‡∏ß‡∏±‡∏ô (‚âà $(printf '%.1f' "$hours_all") ‡∏ä‡∏°.)"
    say "  ‚û§ ‡∏´‡∏≤‡∏Å‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ä‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ‡∏ä‡πà‡∏≠‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß: ~$(printf '%.2f' "$days_if_only_this") ‡∏ß‡∏±‡∏ô"
    print_hr
  done

  say "üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏ó‡∏±‡πâ‡∏á‡∏£‡∏∞‡∏ö‡∏ö"
  say "Bitrate ‡∏£‡∏ß‡∏° : $(printf '%.0f' "$total_kbps") kbps"
  say "‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏î‡πâ‡∏õ‡∏£‡∏∞‡∏°‡∏≤‡∏ì : $(printf '%.2f' "$days_all") ‡∏ß‡∏±‡∏ô (‚âà $(printf '%.1f' "$hours_all") ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á)"
  print_hr
  say "‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏:"
  say "- 1 kbps = 1000 bps, 1 byte = 8 bits, 1 TB = 10^12 bytes"
  say "- ‡∏ú‡∏•‡∏à‡∏£‡∏¥‡∏á‡πÅ‡∏õ‡∏£‡∏ú‡∏±‡∏ô‡∏ï‡∏≤‡∏° VBR/‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏Ñ‡∏•‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏´‡∏ß‡∏†‡∏≤‡∏û/‡πÄ‡∏™‡∏µ‡∏¢‡∏á/Overhead ‡∏Ç‡∏≠‡∏á‡πÑ‡∏ü‡∏•‡πå‡∏£‡∏∞‡∏ö‡∏ö‡πÅ‡∏•‡∏∞ NVR"
  print_hr
}

main "$@"